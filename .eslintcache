[{"/Users/vineet/Documents/react-covid-tracker/src/index.js":"1","/Users/vineet/Documents/react-covid-tracker/src/App.js":"2","/Users/vineet/Documents/react-covid-tracker/src/util.js":"3","/Users/vineet/Documents/react-covid-tracker/src/constants.js":"4","/Users/vineet/Documents/react-covid-tracker/src/hoc/Aux.js":"5","/Users/vineet/Documents/react-covid-tracker/src/Provider.js":"6","/Users/vineet/Documents/react-covid-tracker/src/UI/DropDown/Dropdown.js":"7","/Users/vineet/Documents/react-covid-tracker/src/UI/InfoBox/InfoBox.js":"8","/Users/vineet/Documents/react-covid-tracker/src/LeftContainer/LeftContainer.js":"9","/Users/vineet/Documents/react-covid-tracker/src/LeftContainer/Header/Header.js":"10","/Users/vineet/Documents/react-covid-tracker/src/RightContainer/RightContainer.js":"11","/Users/vineet/Documents/react-covid-tracker/src/RightContainer/Graph/GraphStats.js":"12","/Users/vineet/Documents/react-covid-tracker/src/RightContainer/Graph/LineGraph.js":"13","/Users/vineet/Documents/react-covid-tracker/src/LeftContainer/Map/Map.js":"14","/Users/vineet/Documents/react-covid-tracker/src/RightContainer/Table/Table.js":"15","/Users/vineet/Documents/react-covid-tracker/src/LeftContainer/InfoBoxStats/InfoBoxStats.js":"16"},{"size":299,"mtime":1609568843902,"results":"17","hashOfConfig":"18"},{"size":262,"mtime":1609568288371,"results":"19","hashOfConfig":"18"},{"size":268,"mtime":1609511288870,"results":"20","hashOfConfig":"18"},{"size":1013,"mtime":1609513515388,"results":"21","hashOfConfig":"18"},{"size":61,"mtime":1609421304992,"results":"22","hashOfConfig":"18"},{"size":509,"mtime":1609511517911,"results":"23","hashOfConfig":"18"},{"size":416,"mtime":1609560332418,"results":"24","hashOfConfig":"18"},{"size":692,"mtime":1609560361185,"results":"25","hashOfConfig":"18"},{"size":3675,"mtime":1609569339217,"results":"26","hashOfConfig":"18"},{"size":640,"mtime":1609569035161,"results":"27","hashOfConfig":"18"},{"size":421,"mtime":1609569289342,"results":"28","hashOfConfig":"18"},{"size":611,"mtime":1609569533247,"results":"29","hashOfConfig":"18"},{"size":2343,"mtime":1609568327158,"results":"30","hashOfConfig":"18"},{"size":2444,"mtime":1609568586840,"results":"31","hashOfConfig":"18"},{"size":1062,"mtime":1609568733162,"results":"32","hashOfConfig":"18"},{"size":772,"mtime":1609569403519,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"e0rdhm",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/Users/vineet/Documents/react-covid-tracker/src/index.js",[],["72","73"],"/Users/vineet/Documents/react-covid-tracker/src/App.js",[],"/Users/vineet/Documents/react-covid-tracker/src/util.js",[],"/Users/vineet/Documents/react-covid-tracker/src/constants.js",[],"/Users/vineet/Documents/react-covid-tracker/src/hoc/Aux.js",[],"/Users/vineet/Documents/react-covid-tracker/src/Provider.js",[],"/Users/vineet/Documents/react-covid-tracker/src/UI/DropDown/Dropdown.js",[],["74","75"],"/Users/vineet/Documents/react-covid-tracker/src/UI/InfoBox/InfoBox.js",[],"/Users/vineet/Documents/react-covid-tracker/src/LeftContainer/LeftContainer.js",["76"],"import React from 'react';\nimport { useState, useEffect, useContext } from 'react';\nimport { MenuItem } from '@material-ui/core';\nimport '../App.css';\nimport InfoBoxStats from './InfoBoxStats/InfoBoxStats';\nimport Map from './Map/Map';\nimport 'leaflet/dist/leaflet.css';\nimport { WORLDWIDEDATA_URL as worldWideDataURL, COUNTRYSPECIFICDATA_URL as countrySpecificDataURL } from '../constants';\nimport { pushAtBeginning } from '../util';\nimport { SomeContext } from \"../Provider\";\nimport { caseTypes } from '../constants';\nimport Header from './Header/Header';\nimport './LeftContainer.css';\n\nexport default function LeftContainer() {\n    const [_, setContext] = useContext(SomeContext)\n    const [countries, setCountries] = useState([])\n    const [country, setCountry] = useState('worldwide')\n    const [countryInfo, setCountryInfo] = useState({})\n    const [mapCenter, setMapCenter] = useState({ lat: 34.80, lng: -40.47 })\n    const [mapZoom, setMapZoom] = useState(3)\n    const [mapCountries, setMapCountries] = useState([])\n    const [casesType, setCasesType] = useState(caseTypes.cases.value);\n\n    // Case type dropdown items and on change command\n    const casesDropdownItems = Object.keys(caseTypes).map(key =>\n        <MenuItem key={caseTypes[key].title} value={caseTypes[key].value}>{caseTypes[key].title}</MenuItem>\n    );\n    const onCaseTypeChange = async (event) => {\n        const caseType = await event.target.value;\n        setCasesType(caseType);\n        await setContext({ caseType: caseType })\n    }\n\n    // Country dropdown items and on change command\n    const countryDropdownItems = countries.map(country => (\n        <MenuItem key={country.name} value={country.value}>{country.name}</MenuItem>\n    ));\n    pushAtBeginning(countryDropdownItems, <MenuItem key='worldwide' value='worldwide'>World Wide</MenuItem>);\n    const onCountryChange = async (event) => {\n        const countryValue = event.target.value;\n        await setCountry(countryValue);\n        const url = countryValue === 'worldwide' ? worldWideDataURL : countrySpecificDataURL + \"/\" + countryValue;\n        await fetch(url)\n            .then(r => r.json())\n            .then(data => {\n                setCountryInfo(data);\n                if (url !== worldWideDataURL) {\n                    setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n                }\n                else {\n                    setMapCenter([34.80, -40.47]);\n                }\n                setMapZoom(4);\n            })\n    }\n\n    useEffect(() => {\n        fetch(worldWideDataURL)\n            .then(r => r.json())\n            .then(data => {\n                setCountryInfo(data);\n            })\n    }, [])\n    useEffect(() => {\n        const getCountriesData = async () => {\n            const response = await fetch(countrySpecificDataURL);\n            const responseJSON = await response.json();\n            const countries = await responseJSON.map((country) => ({\n                name: country.country,\n                value: country.countryInfo.iso2\n            }));\n            setCountries(countries);\n            setMapCountries(responseJSON)\n        }\n        getCountriesData();\n    }, [])\n    return (\n        <div className=\"app_left\">\n            <Header\n                countryValue={country}\n                countryOnChange={onCountryChange}\n                countryItems={countryDropdownItems}\n                casesValue={casesType}\n                casesOnChange={onCaseTypeChange}\n                casesItems={casesDropdownItems} />\n            <InfoBoxStats countryInfo={countryInfo} />\n            <Map center={mapCenter} zoom={mapZoom} countries={mapCountries} />\n        </div>\n    )\n}\n","/Users/vineet/Documents/react-covid-tracker/src/LeftContainer/Header/Header.js",[],"/Users/vineet/Documents/react-covid-tracker/src/RightContainer/RightContainer.js",[],"/Users/vineet/Documents/react-covid-tracker/src/RightContainer/Graph/GraphStats.js",["77"],"import React from 'react';\nimport LineGraph from './LineGraph';\nimport Aux from '../../hoc/Aux';\nimport { caseTypes } from '../../constants';\nimport { useContext } from 'react';\nimport { SomeContext } from \"../../Provider\";\nimport './GraphStats.css';\n\nexport default function GraphStats() {\n    const [context, _] = useContext(SomeContext)\n    const { caseType } = context;\n    return (\n        <Aux>\n            <div className=\"graph_heading\">\n                <h3 className=\"title\">{caseTypes[caseType].title} cases</h3>\n            </div>\n            <LineGraph casesType={caseType} />\n        </Aux>\n    )\n}\n","/Users/vineet/Documents/react-covid-tracker/src/RightContainer/Graph/LineGraph.js",[],"/Users/vineet/Documents/react-covid-tracker/src/LeftContainer/Map/Map.js",["78"],"import React from 'react';\nimport { MapContainer as LeafletMap, TileLayer, useMap } from 'react-leaflet';\nimport './Map.css';\nimport numeral from \"numeral\";\nimport { Circle, Popup } from \"react-leaflet\";\nimport * as constants from '../../constants';\nimport { useContext } from 'react';\nimport { SomeContext } from \"../../Provider\";\n\nfunction Map(props) {\n    const [context, _] = useContext(SomeContext)\n    const { caseType } = context;\n    const data = showDataOnMap(props.countries, caseType);\n    return (\n        <div className=\"map\">\n            <LeafletMap center={props.center} zoom={props.zoom} scrollWheelZoom={false}>\n                <ChangeView center={props.center} zoom={props.zoom} /> \n                <TileLayer\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                />\n                {data}\n            </LeafletMap>\n        </div>\n    )\n}\n\nconst showDataOnMap = (data, casesType) => {\n    const color = constants.casesTypeColors[casesType].name\n    console.log(color)\n    return(\n      data.map((country) => (\n        <Circle\n          center={[country.countryInfo.lat, country.countryInfo.long]}\n          color={constants.casesTypeColors[casesType].name}\n          fillColor={constants.casesTypeColors[casesType].name}\n          fillOpacity={0.4}\n          radius={\n            Math.sqrt(country[casesType]) * constants.casesTypeColors[casesType].multiplier\n          }\n        >\n          <Popup>\n            <div className=\"info-container\">\n              <div\n                className=\"info-flag\"\n                style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\n              ></div>\n              <div className=\"info-name\">{country.country}</div>\n              <div className=\"info-confirmed\">\n                Cases: {numeral(country.cases).format(\"0,0\")}\n              </div>\n              <div className=\"info-recovered\">\n                Recovered: {numeral(country.recovered).format(\"0,0\")}\n              </div>\n              <div className=\"info-deaths\">\n                Deaths: {numeral(country.deaths).format(\"0,0\")}\n              </div>\n            </div>\n          </Popup>\n        </Circle>\n      ))\n    )\n  }\n\nfunction ChangeView({ center, zoom }) {\n    const map = useMap();\n    map.setView(center, zoom);\n    return null;\n  } \nexport default Map;","/Users/vineet/Documents/react-covid-tracker/src/RightContainer/Table/Table.js",["79"],"import React from 'react'\nimport classes from './Table.css';\nimport Aux from '../../hoc/Aux';\nimport { useState, useEffect } from 'react';\nimport { COUNTRYSPECIFICDATA_URL as countrySpecificDataURL} from '../../constants';\nimport { sortData } from '../../util';\n\nexport default function Table(props) {\n    const [tableData, setTableData] = useState([]);\n    useEffect(() => {\n        const getCountriesData = async () => {\n          const response = await fetch(countrySpecificDataURL);\n          const responseJSON = await response.json();\n          const sortedResponse = await sortData(responseJSON);\n          setTableData(sortedResponse);\n        }\n        getCountriesData();\n      }, []);\n    return (\n        <Aux>\n            <h3>Live Cases</h3>\n            <div className=\"table\">\n                {tableData.map(({ country, cases }) => (\n                    <tr>\n                        <td>{country}</td>\n                        <td><strong>{cases}</strong></td>\n                    </tr>\n                ))}\n            </div>\n        </Aux>\n    )\n}\n","/Users/vineet/Documents/react-covid-tracker/src/LeftContainer/InfoBoxStats/InfoBoxStats.js",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"80","replacedBy":"84"},{"ruleId":"82","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":16,"column":12,"nodeType":"88","messageId":"89","endLine":16,"endColumn":13},{"ruleId":"86","severity":1,"message":"87","line":10,"column":21,"nodeType":"88","messageId":"89","endLine":10,"endColumn":22},{"ruleId":"86","severity":1,"message":"87","line":11,"column":21,"nodeType":"88","messageId":"89","endLine":11,"endColumn":22},{"ruleId":"86","severity":1,"message":"90","line":2,"column":8,"nodeType":"88","messageId":"89","endLine":2,"endColumn":15},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],["91"],["92"],"no-unused-vars","'_' is assigned a value but never used.","Identifier","unusedVar","'classes' is defined but never used.","no-global-assign","no-unsafe-negation"]