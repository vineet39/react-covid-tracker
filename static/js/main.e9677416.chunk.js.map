{"version":3,"sources":["UI/InfoBox/InfoBox.js","LeftContainer/InfoBoxStats/InfoBoxStats.js","constants.js","Provider.js","LeftContainer/Map/Map.js","util.js","UI/DropDown/Dropdown.js","LeftContainer/Header/Header.js","LeftContainer/LeftContainer.js","RightContainer/Graph/LineGraph.js","hoc/Aux.js","RightContainer/Graph/GraphStats.js","RightContainer/Table/Table.js","RightContainer/RightContainer.js","App.js","index.js"],"names":["InfoBox","props","Card","className","CardContent","Typography","color","title","cases","total","InfoBoxStats","details","countryInfo","todayCases","recovered","todayRecovered","deaths","todayDeaths","items","Object","keys","map","key","NEW_CASES","caseTypes","value","BASE_URL","WORLDWIDEDATA_URL","COUNTRYSPECIFICDATA_URL","casesTypeColors","hex","rgb","half_op","multiplier","name","SomeContext","createContext","Provider","SomeProvider","children","useState","caseType","constants","coordinates","lat","lng","state","setState","context","showDataOnMap","data","casesType","console","log","country","Circle","center","long","fillColor","fillOpacity","radius","Math","sqrt","Popup","style","backgroundImage","flag","numeral","format","ChangeView","zoom","useMap","setView","Map","useContext","countries","scrollWheelZoom","TileLayer","url","attribution","sortData","sortedData","sort","a","b","Dropdown","FormControl","Select","variant","onChange","Header","countryValue","countryOnChange","countryItems","casesValue","casesOnChange","casesItems","LeftContainer","object","setContext","setCountries","setCountry","setCountryInfo","mapCenter","setMapCenter","mapZoom","setMapZoom","mapCountries","setMapCountries","setCasesType","casesDropdownItems","MenuItem","onCaseTypeChange","event","target","countryDropdownItems","unshift","onCountryChange","worldWideDataURL","countrySpecificDataURL","fetch","then","r","json","useEffect","response","responseJSON","iso2","getCountriesData","options","legend","display","elements","point","maintainAspectRatio","responsive","tooltips","mode","intersect","callbacks","label","tooltipItem","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","buildChartData","lastDataPoint","chartData","date","newDataPoint","x","y","push","LineGraph","setData","fetchData","length","datasets","backgroundColor","borderColor","aux","GraphStats","Aux","Table","tableData","setTableData","sortedResponse","RightContainer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e9677416.chunk.js","sourcesContent":["import React from 'react';\nimport { Card, CardContent, Typography } from '@material-ui/core';\nimport './InfoBox.css';\n\nexport default function InfoBox(props) {\n    return (\n        <Card className=\"infoBox\">\n            <CardContent>\n                <Typography className=\"infoBox_title\" color=\"textSecondary\">\n                    {props.title}\n                </Typography>\n                <Typography className=\"infoBox_cases\">\n                    {props.cases}\n                </Typography>\n                <Typography className=\"infoBox_total\" color=\"textSecondary\">\n                    {props.total} Total\n                </Typography>\n            </CardContent>\n        </Card>\n    )\n}\n","import React from 'react';\nimport InfoBox from '../../UI/InfoBox/InfoBox';\nimport  './InfoBoxStats.css';\n\nexport default function InfoBoxStats(props) {\n    const details = {\n        cases: { title: \"Cases\", cases: props.countryInfo.todayCases, total: props.countryInfo.cases },\n        recovered: { title: \"Recovered\", cases: props.countryInfo.todayRecovered, total: props.countryInfo.recovered },\n        deaths: { title: \"Deaths\", cases: props.countryInfo.todayDeaths, total: props.countryInfo.deaths }\n    };\n    const items = Object.keys(details).map(key =>\n        <InfoBox key={key} title={details[key].title} cases={details[key].cases} total={details[key].total} />\n    );\n    return (\n        <div className=\"app_stats\">\n            {items}\n        </div>\n    )\n}\n","export const NEW_CASES = \"cases\";\nexport const RECOVERED_CASES = \"recovered\";\nexport const DEATH_CASES = \"deaths\";\n\nexport const caseTypes = {\n    cases: { title: 'New', value: 'cases' },\n    recovered: { title: 'Recovered', value: 'recovered' },\n    deaths: { title: 'Death', value: 'deaths' }\n}\n\nexport const BASE_URL = 'https://disease.sh/v3/covid-19/';\nexport const WORLDWIDEDATA_URL = BASE_URL + \"all\";\nexport const COUNTRYSPECIFICDATA_URL = BASE_URL + \"countries\";\n\nexport const casesTypeColors = {\n    cases: {\n        hex: \"#FFFF00\",\n        rgb: \"rgb(255,255,0)\",\n        half_op: \"rgba(204, 16, 52, 0.5)\",\n        multiplier: 400,\n        name: \"yellow\"\n    },\n    recovered: {\n        hex: \"#7dd71d\",\n        rgb: \"rgb(125, 215, 29)\",\n        half_op: \"rgba(125, 215, 29, 0.5)\",\n        multiplier: 600,\n        name: \"green\"\n    },\n    deaths: {\n        hex: \"#fb4443\",\n        rgb: \"rgb(251, 68, 67)\",\n        half_op: \"rgba(251, 68, 67, 0.5)\",\n        multiplier: 1000,\n        name: \"red\"\n    },\n};","import React, { useState, createContext } from \"react\";\nimport * as constants from './constants';\n\nexport const SomeContext = createContext(null);\n\nconst {Provider} = SomeContext;\n\nconst SomeProvider = ({ children }) => {\n    const [state, setState] = useState({\n        caseType: constants.NEW_CASES,\n        coordinates: { lat: 34.80, lng: -40.47 }\n    });\n    return <Provider value={\n        [state, setState]}> {children} </Provider>;\n};\n\nSomeProvider.context = SomeContext;\n\nexport default SomeProvider;","import React from 'react';\nimport { MapContainer as LeafletMap, TileLayer, useMap } from 'react-leaflet';\nimport './Map.css';\nimport numeral from \"numeral\";\nimport { Circle, Popup } from \"react-leaflet\";\nimport * as constants from '../../constants';\nimport { useContext } from 'react';\nimport { SomeContext } from \"../../Provider\";\n\nfunction Map(props) {\n    const [context, _] = useContext(SomeContext)\n    const { caseType } = context;\n    const data = showDataOnMap(props.countries, caseType);\n    return (\n        <div className=\"map\">\n            <LeafletMap center={props.center} zoom={props.zoom} scrollWheelZoom={false}>\n                <ChangeView center={props.center} zoom={props.zoom} /> \n                <TileLayer\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                />\n                {data}\n            </LeafletMap>\n        </div>\n    )\n}\n\nconst showDataOnMap = (data, casesType) => {\n    const color = constants.casesTypeColors[casesType].name\n    console.log(color)\n    return(\n      data.map((country) => (\n        <Circle\n          center={[country.countryInfo.lat, country.countryInfo.long]}\n          color={constants.casesTypeColors[casesType].name}\n          fillColor={constants.casesTypeColors[casesType].name}\n          fillOpacity={0.4}\n          radius={\n            Math.sqrt(country[casesType]) * constants.casesTypeColors[casesType].multiplier\n          }\n        >\n          <Popup>\n            <div className=\"info-container\">\n              <div\n                className=\"info-flag\"\n                style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\n              ></div>\n              <div className=\"info-name\">{country.country}</div>\n              <div className=\"info-confirmed\">\n                Cases: {numeral(country.cases).format(\"0,0\")}\n              </div>\n              <div className=\"info-recovered\">\n                Recovered: {numeral(country.recovered).format(\"0,0\")}\n              </div>\n              <div className=\"info-deaths\">\n                Deaths: {numeral(country.deaths).format(\"0,0\")}\n              </div>\n            </div>\n          </Popup>\n        </Circle>\n      ))\n    )\n  }\n\nfunction ChangeView({ center, zoom }) {\n    const map = useMap();\n    map.setView(center, zoom);\n    return null;\n  } \nexport default Map;","export const sortData = (data) => {\n  const sortedData = data;\n\n  sortedData.sort((a, b) => {\n    if (a.cases > b.cases)\n      return -1;\n    else\n      return 1;\n  })\n  return sortedData;\n}\n\nexport const pushAtBeginning = (data, object) => {\n  data.unshift(object);\n}","import React from 'react';\nimport { FormControl, Select } from '@material-ui/core';\n\nexport default function Dropdown(props) {\n    return (\n        <FormControl>\n            <Select\n                variant=\"outlined\"\n                value={props.value}\n                onChange={props.onChange}>\n                {\n                   props.items\n                }\n            </Select>\n        </FormControl>\n    )\n}\n","import React from 'react';\nimport Dropdown from '../../UI/DropDown/Dropdown';\nimport './Header.css';\n\nexport default function Header(props) {\n    return (\n        <div className=\"app_header\">\n            <h1>COVID-19 Tracker</h1>\n            <Dropdown\n                className=\"dropdown\"\n                value={props.countryValue}\n                onChange={props.countryOnChange}\n                items={props.countryItems} />\n            <Dropdown\n                className=\"dropdown\"\n                value={props.casesValue}\n                onChange={props.casesOnChange}\n                items={props.casesItems} />\n        </div>\n    )\n}","import React from 'react';\nimport { useState, useEffect, useContext } from 'react';\nimport { MenuItem } from '@material-ui/core';\nimport '../App.css';\nimport InfoBoxStats from './InfoBoxStats/InfoBoxStats';\nimport Map from './Map/Map';\nimport 'leaflet/dist/leaflet.css';\nimport { WORLDWIDEDATA_URL as worldWideDataURL, COUNTRYSPECIFICDATA_URL as countrySpecificDataURL } from '../constants';\nimport { pushAtBeginning } from '../util';\nimport { SomeContext } from \"../Provider\";\nimport { caseTypes } from '../constants';\nimport Header from './Header/Header';\nimport './LeftContainer.css';\n\nexport default function LeftContainer() {\n    const [_, setContext] = useContext(SomeContext)\n    const [countries, setCountries] = useState([])\n    const [country, setCountry] = useState('worldwide')\n    const [countryInfo, setCountryInfo] = useState({})\n    const [mapCenter, setMapCenter] = useState({ lat: 34.80, lng: -40.47 })\n    const [mapZoom, setMapZoom] = useState(3)\n    const [mapCountries, setMapCountries] = useState([])\n    const [casesType, setCasesType] = useState(caseTypes.cases.value);\n\n    // Case type dropdown items and on change command\n    const casesDropdownItems = Object.keys(caseTypes).map(key =>\n        <MenuItem key={caseTypes[key].title} value={caseTypes[key].value}>{caseTypes[key].title}</MenuItem>\n    );\n    const onCaseTypeChange = async (event) => {\n        const caseType = await event.target.value;\n        setCasesType(caseType);\n        await setContext({ caseType: caseType })\n    }\n\n    // Country dropdown items and on change command\n    const countryDropdownItems = countries.map(country => (\n        <MenuItem key={country.name} value={country.value}>{country.name}</MenuItem>\n    ));\n    pushAtBeginning(countryDropdownItems, <MenuItem key='worldwide' value='worldwide'>World Wide</MenuItem>);\n    const onCountryChange = async (event) => {\n        const countryValue = event.target.value;\n        await setCountry(countryValue);\n        const url = countryValue === 'worldwide' ? worldWideDataURL : countrySpecificDataURL + \"/\" + countryValue;\n        await fetch(url)\n            .then(r => r.json())\n            .then(data => {\n                setCountryInfo(data);\n                if (url !== worldWideDataURL) {\n                    setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n                }\n                else {\n                    setMapCenter([34.80, -40.47]);\n                }\n                setMapZoom(4);\n            })\n    }\n\n    useEffect(() => {\n        fetch(worldWideDataURL)\n            .then(r => r.json())\n            .then(data => {\n                setCountryInfo(data);\n            })\n    }, [])\n    useEffect(() => {\n        const getCountriesData = async () => {\n            const response = await fetch(countrySpecificDataURL);\n            const responseJSON = await response.json();\n            const countries = await responseJSON.map((country) => ({\n                name: country.country,\n                value: country.countryInfo.iso2\n            }));\n            setCountries(countries);\n            setMapCountries(responseJSON)\n        }\n        getCountriesData();\n    }, [])\n    return (\n        <div className=\"app_left\">\n            <Header\n                countryValue={country}\n                countryOnChange={onCountryChange}\n                countryItems={countryDropdownItems}\n                casesValue={casesType}\n                casesOnChange={onCaseTypeChange}\n                casesItems={casesDropdownItems} />\n            <InfoBoxStats countryInfo={countryInfo} />\n            <Map center={mapCenter} zoom={mapZoom} countries={mapCountries} />\n        </div>\n    )\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport numeral from \"numeral\";\nimport * as constants from '../../constants';\n\nconst options = {\n  legend: {\n    display: false,\n  },\n  elements: {\n    point: {\n      radius: 0,\n    },\n  },\n  maintainAspectRatio: true,\n  responsive: true,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format(\"+0,0\");\n      },\n    },\n  },\n  scales: {\n    xAxes: [\n      {\n        type: \"time\",\n        time: {\n          format: \"MM/DD/YY\",\n          tooltipFormat: \"ll\",\n        },\n      },\n    ],\n    yAxes: [\n      {\n        gridLines: {\n          display: false,\n        },\n        ticks: {\n          // Include a dollar sign in the ticks\n          callback: function (value, index, values) {\n            return numeral(value).format(\"0a\");\n          },\n        },\n      },\n    ],\n  },\n};\n\nconst buildChartData = (data, casesType = constants.NEW_CASES) => {\n  let chartData = [];\n  let lastDataPoint;\n  for (let date in data.cases) {\n    if (lastDataPoint) {\n      let newDataPoint = {\n        x: date,\n        y: casesType === constants.NEW_CASES ? data[casesType][date] - lastDataPoint : data[casesType][date]\n      };\n      chartData.push(newDataPoint);\n    }\n    lastDataPoint = data[casesType][date];\n  }\n  return chartData;\n};\n\nconst url = constants.BASE_URL + \"historical/all?lastdays=120\";\n\nfunction LineGraph({ casesType }) {\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(url)\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          let chartData = buildChartData(data, casesType);\n          setData(chartData);\n        });\n    };\n\n    fetchData();\n  }, [casesType]);\n\n  return (\n    <div className=\"graph\">\n      {data?.length > 0 && (\n        <Line\n          data={{\n            datasets: [\n              {\n                backgroundColor: constants.casesTypeColors[casesType].hex,\n                borderColor: constants.casesTypeColors[casesType].hex,\n                data: data,\n              },\n            ],\n          }}\n          options={options}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default LineGraph;\n","const aux = (props) => (props.children);\n\nexport default aux;","import React from 'react';\nimport LineGraph from './LineGraph';\nimport Aux from '../../hoc/Aux';\nimport { caseTypes } from '../../constants';\nimport { useContext } from 'react';\nimport { SomeContext } from \"../../Provider\";\nimport './GraphStats.css';\n\nexport default function GraphStats() {\n    const [context, _] = useContext(SomeContext)\n    const { caseType } = context;\n    return (\n        <Aux>\n            <div className=\"graph_heading\">\n                <h3 className=\"title\">{caseTypes[caseType].title} cases</h3>\n            </div>\n            <LineGraph casesType={caseType} />\n        </Aux>\n    )\n}\n","import React from 'react'\nimport classes from './Table.css';\nimport Aux from '../../hoc/Aux';\nimport { useState, useEffect } from 'react';\nimport { COUNTRYSPECIFICDATA_URL as countrySpecificDataURL} from '../../constants';\nimport { sortData } from '../../util';\n\nexport default function Table(props) {\n    const [tableData, setTableData] = useState([]);\n    useEffect(() => {\n        const getCountriesData = async () => {\n          const response = await fetch(countrySpecificDataURL);\n          const responseJSON = await response.json();\n          const sortedResponse = await sortData(responseJSON);\n          setTableData(sortedResponse);\n        }\n        getCountriesData();\n      }, []);\n    return (\n        <Aux>\n            <h3>Live Cases</h3>\n            <div className=\"table\">\n                {tableData.map(({ country, cases }) => (\n                    <tr>\n                        <td>{country}</td>\n                        <td><strong>{cases}</strong></td>\n                    </tr>\n                ))}\n            </div>\n        </Aux>\n    )\n}\n","import React from 'react';\nimport { Card, CardContent } from '@material-ui/core';\nimport GraphStats from './Graph/GraphStats';\nimport Table from './Table/Table';\nimport './RightContainer.css';\n\nexport default function RightContainer() {\n    return (\n        <Card className=\"app_right\">\n            <CardContent>\n                <Table />\n                <GraphStats />\n            </CardContent>\n        </Card>\n    )\n}\n","import LeftContainer from './LeftContainer/LeftContainer';\nimport RightContainer from './RightContainer/RightContainer';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n     <LeftContainer />\n     <RightContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport SomeProvider from './Provider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <SomeProvider>\n      <App />\n    </SomeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}